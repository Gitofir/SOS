@model WebApp.Models.User

@{
    ViewData["Title"] = "My Profile";
}
<body>
    <script>
        function loadXMLDoc() {
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    myFunction(this);
                }
            };
            xmlhttp.open("GET", "/hot_stocks.xml", true);
            xmlhttp.send();
        }
        function myFunction(xml) {
            var i;
            var xmlDoc = xml.responseXML;
            var table = "<tr><th>Name</th><th>Symbol</th><th>Market</th></tr>";
            var x = xmlDoc.getElementsByTagName("STOCK");
            for (i = 0; i < x.length; i++) {
                table += "<tr><td>" +
                    x[i].getElementsByTagName("NAME")[0].childNodes[0].nodeValue +
                    "</td><td>" +
                    x[i].getElementsByTagName("TITLE")[0].childNodes[0].nodeValue +
                    "</td><td>" +
                    x[i].getElementsByTagName("MARKET")[0].childNodes[0].nodeValue +
                    "</td></tr>";
            }
            document.getElementById("hotstocks").innerHTML = table;
        }
    </script>
</body>
<br />
<h1>Hello @Html.DisplayFor(model => model.Username)!</h1>
<br />
<a asp-action="InputCC" class="btn-outline-dark">Enter Credit Card</a> |
<a asp-action="Statistics" class="btn-outline-dark">Statistics</a>
<br />

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Password)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Password)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Birthdate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Birthdate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Admin)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Admin)
        </dd>

        @foreach (Stock stock in Model.OwnedStocks)
        {
            <dt class="col-sm-2">
                @stock.Name
            </dt>
            <dd class="col-sm-10">
                @stock.Symbol
            </dd>
        }
    </dl>
</div>

<!-- Ajax -->

<button type="button" onclick="loadXMLDoc()" class="btn btn-outline-info">Hot stocks &#128293</input>
<br />
<table id="hotstocks"></table>
